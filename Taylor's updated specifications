Updated: Sound output was not going well for me in Java. Luckily was working on back-up project. A simplified 
rendition of the ASCII game "Rogue" recreated in Java. 


Specifications:

General constraints:

The program will be written entirely in Java. No external graphics will be used to represent any elememts of the game, 
but instead strictly ASCII characters. 

Goals and guidelines:

The program will be a simplified version of the game "Rogue." ASCII characters will be used as graphics to represent the character, rooms and enemies. 
A dungeon will be created with each floor having randomly generated rooms. The player will traverse the rooms through corridors
and try to find stairs to go to the next room. 

_____________
|            |            _________
|            |            |       |
|   P        ]############[       |
|            |            |       |
|            |            |       |
--------------            |       |
                          |       |
                          ---------
                          
Development methods:

Objects will hold different entities, such as the player, enemies, items, and rooms. Rooms will randomly be generated 
rectangles using procedural algorithm.

Policies and Tactics:

The entire game will be written in Java and compiled in Eclipse. A profiler used specifically in Java will be used for
profiling the game. The program will be tested in both Windows and Linux.


UPDATE:

MIDPOINT: By my midpoint I'd like to have everything but room generation and enemies functioning

END: I'd like to have a random room generator and enemies that follow, attack, and kill you

PROGRESS:

So far I have been able to use characters to represent that game. Using an array of a "Tiles" class, 
I am able to make the walls of rooms and spawn the player to where he/she can walk around and not into the walls. 
The array is a 2D array in order to store each element's x and y coordinates and represents the entire map. A simple rectangle is made by specifying 
its x and y coordinates and width and height and by using a nested "for" loop, each part of the rectangle is added to the 
array which is then printed out on to the screen (black background).

Items have been added but are not functional yet, they simply just spawn and do nothing. 
Doors appear sometimes on the room you start in by randomly generated a number to determine which of the four walls it appears on,
 allows the player to walk into it, unlike the walls which surround it. My next step is to create an algorithm that automatically connects the door to other rooms by 
a corridor. A text box will also be added to tell that player what evnts hav occured. 

Specifications template courtesy of: http://www.bradapp.com/docs/sdd.html#TOC_SEC5
